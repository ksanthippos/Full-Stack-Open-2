{"version":3,"sources":["services/persons.js","components/AddPerson.js","components/FindName.js","components/Person.js","components/Display.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObj","post","id","put","delete","AddPerson","persons","setPersons","setNewName","setNewNumber","newName","handleNameChange","newNumber","handleNumberChange","setNotification","notificationClass","setNotificationClass","onSubmit","event","preventDefault","personObj","name","number","person","find","p","window","confirm","updatedPerson","personService","returnedPerson","map","catch","error","setTimeout","filter","n","concat","value","onChange","type","FindName","setSearchNull","setSearchResults","searchTerm","handleFindName","useEffect","found","toLowerCase","includes","placeholder","Person","className","onClick","returnedPersons","Display","searchNull","namesToShow","i","key","Notification","message","App","useState","setSearchTerm","searchResults","notification","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7244dc7.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request\r\n        .then(response => response.data)\r\n}\r\n\r\nconst create = (newObj) => {\r\n    const request = axios.post(baseUrl, newObj)\r\n    return request\r\n        .then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObj)\r\n    return request\r\n        .then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request\r\n        .then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, deletePerson }\r\n\r\n","import React from \"react\";\r\nimport personService from \"../services/persons\";\r\n\r\n\r\nconst AddPerson = ({persons, setPersons, setNewName, setNewNumber, newName,\r\n                       handleNameChange, newNumber, handleNumberChange,\r\n                            setNotification, notificationClass, setNotificationClass}) => {\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const personObj = {\r\n            name: newName,\r\n            number: newNumber,\r\n        }\r\n\r\n        // etsitään henkilö nimen perusteella\r\n        const person = persons.find(p => p.name === newName)\r\n\r\n        if (person) {\r\n            if (window.confirm(\"Replace \" + newName +  \"'s number?\")) {\r\n\r\n                // kopio alkuperäisstä henkilöstä\r\n                const updatedPerson = {...person, number: person.number = newNumber}\r\n\r\n                personService\r\n                    .update(person.id, updatedPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(person => person.id\r\n                            ? person\r\n                            : returnedPerson))\r\n                    })\r\n                    .catch(error => {\r\n                        // päivittäminen ei onnistunut, esim. henkilö oli ehditty jo poistaa eri selainikkunassa\r\n                        setNotificationClass('error')\r\n                        setNotification(`Error ${error}: ${newName} has already been deleted`, {notificationClass})\r\n                        setTimeout(() => {\r\n                            setNotification(null)\r\n                        }, 5000)\r\n                    })\r\n\r\n                // ilmoitus onnistuneesta lisäyksestä\r\n                setNotificationClass('update')\r\n                setNotification(`Updated ${newName} number to ${newNumber}`, {notificationClass})\r\n                setTimeout(() => {\r\n                    setNotification(null)\r\n                }, 5000)\r\n\r\n                // luettelon refresh vain päivitetyn henkilön osalta\r\n                setPersons(persons.filter(n => n.id !== person.id))\r\n                setNewName('')\r\n                setNewNumber('')\r\n            }\r\n        }\r\n        // luodaan uusi henkilö\r\n        else {\r\n            personService\r\n                .create(personObj)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                })\r\n                .catch(error => {\r\n                    // validaatiovirhe, esim nimi liian lyhyt\r\n                    setNotificationClass('error')\r\n                    setNotification(`${error.response.data.error}`, {notificationClass})\r\n                    setTimeout(() => {\r\n                        setNotification(null)\r\n                    }, 5000)\r\n                })\r\n\r\n            // ilmoitus onnistuneesta lisäämisestä\r\n            setNotificationClass('success')\r\n            setNotification(`Added ${newName}`, {notificationClass})\r\n            setTimeout(() => {\r\n                setNotification(null)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleNameChange}/>\r\n                </div>\r\n                <div>\r\n                    number: <input value={newNumber} onChange={handleNumberChange}/>\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        type=\"submit\">\r\n                        add\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPerson","import React, {useEffect} from \"react\";\r\n\r\nconst FindName = ({ setSearchNull, persons, setSearchResults,\r\n                      searchTerm, handleFindName }) => {\r\n\r\n    // tarkistus onko hakukenttä tyhjä, jotta Display osaa renderöidä oikein\r\n    useEffect(() => {\r\n        if (searchTerm !== '')\r\n            setSearchNull(false)\r\n        else\r\n            setSearchNull(true)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const found = persons.filter(person =>\r\n            person.name.toLowerCase().includes(searchTerm)\r\n        )\r\n        setSearchResults(found)\r\n    }, [persons, setSearchResults, searchTerm])\r\n\r\n    return (\r\n        <form>\r\n            <div>\r\n                Filter by name:\r\n                <input placeholder='Search:' value={searchTerm} onChange={handleFindName}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FindName","import React from \"react\";\r\nimport personService from \"../services/persons\";\r\n\r\nconst Person = ({ person, setPersons, setNotification, notificationClass, setNotificationClass }) => {\r\n\r\n    const handleDelete = () => {\r\n        if (window.confirm(\"Delete \" + person.name + \" from contacts?\")) {\r\n            personService\r\n                .deletePerson(person.id)\r\n                .then(() => {\r\n                    // päivitetään näkymä\r\n                    personService\r\n                        .getAll()\r\n                        .then(returnedPersons => {\r\n                            setPersons(returnedPersons)\r\n                        })\r\n                })\r\n\r\n            // ilmoitus poistamisesta\r\n            setNotificationClass('update')\r\n            setNotification(`Deleted ${person.name} from contacts`, {notificationClass})\r\n            setTimeout(() => {\r\n                setNotification(null)\r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <li className='person'>\r\n                {person.name} : {person.number}\r\n                <button onClick={handleDelete}>\r\n                    delete\r\n                </button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import Person from \"./Person\";\r\nimport React from \"react\";\r\n\r\nconst Display = ( {searchNull, persons, setPersons, namesToShow,\r\n                      setNotification, notificationClass, setNotificationClass}) => {\r\n\r\n    // hakukenttä on tyhjä, näytetään kaikki henkilöt\r\n    if (searchNull) {\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {persons.map((person, i) =>\r\n                        <Person\r\n                            key={i}\r\n                            person={person}\r\n                            persons={persons}\r\n                            setPersons={setPersons}\r\n                            setNotification={setNotification}\r\n                            notificationClass={notificationClass}\r\n                            setNotificationClass={setNotificationClass}\r\n                        />\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    // näytetään vain hakukentän mukaiset henkilöt\r\n    else {\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {namesToShow.map((person, i) =>\r\n                        <Person\r\n                            key={i}\r\n                            person={person}\r\n                            persons={persons}\r\n                            setPersons={setPersons}\r\n                            setNotification={setNotification}\r\n                            notificationClass={notificationClass}\r\n                            setNotificationClass={setNotificationClass}\r\n                        />\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Display","import React from \"react\";\r\n\r\nconst Notification = ({message, notificationClass}) => {\r\n    if (message === null)\r\n        return null\r\n\r\n    return (\r\n        <div className={notificationClass}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useEffect, useState} from 'react'\r\nimport AddPerson from \"./components/AddPerson\";\r\nimport FindName from \"./components/FindName\";\r\nimport Display from \"./components/Display\";\r\nimport Notification from \"./components/Notification\";\r\nimport personService from \"./services/persons\"\r\n\r\n// OSA 2\r\n// PUHELINLUETTELO\r\n// tehtävät 2.19 - 2.20\r\n\r\nconst App = () => {\r\n\r\n    const [ persons, setPersons] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ searchTerm, setSearchTerm ] = useState('')\r\n    const [ searchResults, setSearchResults ] = useState([])\r\n    const [ searchNull, setSearchNull ] = useState(true)\r\n    const [ notificationClass, setNotificationClass ] = useState('success')\r\n    const [ notification, setNotification ] = useState(null, notificationClass)\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(returnedPersons => {\r\n                setPersons(returnedPersons)\r\n            })\r\n    }, [])\r\n\r\n    const handleNameChange = (event) => { setNewName(event.target.value) }\r\n\r\n    const handleNumberChange = (event) => { setNewNumber(event.target.value) }\r\n\r\n    const handleFindName = (event) => { setSearchTerm(event.target.value) }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification message={notification} notificationClass={notificationClass}/>\r\n            <FindName setSearchNull={setSearchNull}\r\n                      persons={persons}\r\n                      setSearchResults={setSearchResults}\r\n                      searchTerm={searchTerm}\r\n                      handleFindName={handleFindName}\r\n            />\r\n            <h2>Add new</h2>\r\n            <AddPerson namesToShow={searchResults}\r\n                       persons={persons}\r\n                       setPersons={setPersons}\r\n                       setNewName={setNewName}\r\n                       newName={newName}\r\n                       handleNameChange={handleNameChange}\r\n                       newNumber={newNumber}\r\n                       setNewNumber={setNewNumber}\r\n                       handleNumberChange={handleNumberChange}\r\n                       setNotification={setNotification}\r\n                       notificationClass={notificationClass}\r\n                       setNotificationClass={setNotificationClass}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Display searchNull={searchNull}\r\n                     persons={persons}\r\n                     setPersons={setPersons}\r\n                     namesToShow={searchResults}\r\n                     setNotification={setNotification}\r\n                     notificationClass={notificationClass}\r\n                     setNotificationClass={setNotificationClass}\r\n            />\r\n            ...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport \"./index.css\"\n\n// OSA 3\n// PUHELINLUETTELO\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}